# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install -DskipTests
    - name: Upload Artifacct for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: firstspringsql
        path: ${{ github.workspace }}/target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: firstspringsql
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure spring Service
        uses: azure/spring-cloud-deploy@v1
        with:
          azure-subscription: 7860472d-2203-4ceb-a700-63e0b4227ed9
          action: Deploy
          service-name: firstapp
          app-name: vindhyaproduct
          use-staging-deployment: false
          package: '*.jar'